#!/usr/bin/env python3

import logging
import argparse
import functools

import pyglet
from pyglet.window.key import KeyStateHandler
from pyglet import gl

# parse arguments
parser = argparse.ArgumentParser()
parser.add_argument('--loglevel', action='store', default='warn')
parser.add_argument('--logfile', action='store', default='')
args = parser.parse_args()

# setup root logger
logger = logging.getLogger()
if args.logfile:
    handler = logging.FileHandler(args.logfile)
else:
    handler = logging.StreamHandler()
logger.addHandler(handler)
handler.setFormatter(logging.Formatter(
    '%(asctime)s %(levelname)s %(name)s %(message)s'))
try:
    a = getattr(logging, args.loglevel.upper())
except AttributeError:
    raise ValueError('Invalid log level: {!s}'.format(args.loglevel))
else:
    logger.setLevel(a)

logger.info("Initializing game...")

# Now that logger is up, import stuff
from gensokyo import locator
from gensokyo import state
from gensokyo.graphics import Graphics
from gensokyo.state import main_menu
from gensokyo.globals import WIDTH, HEIGHT, FPS
from gensokyo import resources

# window
logger.debug("Initializing window...")
window = pyglet.window.Window(WIDTH, HEIGHT)
locator.window = window

window.set_caption('TouhouS')
window.set_icon(resources.icon16, resources.icon32)

# Transparency
logger.debug("Setting transparency...")
gl.glEnable(gl.GL_BLEND)
gl.glBlendFunc(gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA)

# State tree
logger.debug("Creating state tree...")
state_tree = state.StateTree()
locator.state_tree = state_tree

# key_state
logger.debug("Creating KeyState...")
keys = KeyStateHandler()
window.push_handlers(keys)
locator.key_state = keys

# graphics
locator.graphics = Graphics()

# clock
logger.debug("Initializing clock...")
pyglet.clock.set_fps_limit(FPS)
pyglet.clock.schedule(functools.partial(
    state_tree.dispatch_event, state_tree, 'on_update'))

# initial state
logger.debug("Setting start state...")
state_tree.dispatch_event(
    'on_transition', state.Transition(main_menu.MenuScene, False))

logger.info("Finished init.")
logger.info("Running...")
pyglet.app.run()
